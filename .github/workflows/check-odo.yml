name: check-odo

on: [workflow_dispatch]

jobs:
  check-odo-repo:
    runs-on: ubuntu-latest
    env:
        API_REPO: https://api.github.com
        OWNER: redhat-developer
        ODO_REPO: odo
        REPO: vscode-openshift-tools
        ACCEPT_HEADER: 'Accept: application/vnd.github.v3+json'
        AUTHORIZATION_HEADER: "Authorization: token ${{ secrets.GITHUB_TOKEN }}"
    steps:
      - name: Check Out Code
        uses: actions/checkout@v2
      - name: Get latest ODO versions
        run: |
          echo "REPO_ODO_VERSION=$(cat src/tools.json | jq -r .odo.version)" >> $GITHUB_ENV
          LATEST_RELEASE_RESPONSE=$(curl -X GET -H "${{ env.AUTHORIZATION_HEADER }}" -H "${{ env.ACCEPT_HEADER }}" "${{ env.API_REPO }}/repos/${{ env.OWNER }}/${{ env.ODO_REPO }}/releases/latest")
          echo LATEST_CANDIDATE=$(echo ${LATEST_RELEASE_RESPONSE} | jq -r .tag_name) >> $GITHUB_ENV
          echo LATEST_CANDIDATE_URL=$(echo ${LATEST_RELEASE_RESPONSE} | jq -r .html_url) >> $GITHUB_ENV
      - name: Find existing issue for ODO version
        run: |
          echo ISSUE_URL=$(curl -X GET -H "${{ env.AUTHORIZATION_HEADER }}" -H "${{ env.ACCEPT_HEADER }}" "${{ env.API_REPO }}/search/issues?q=update+odo+${{env.LATEST_CANDIDATE}}+in:title+is:issue+repo:rgrunber/${{ env.REPO }}" | jq -r .items[].html_url) >> $GITHUB_ENV
      - name: Create issue to update to latest odo
        if: ${{ ! (startsWith(env.LATEST_CANDIDATE,'v') && endsWith(env.LATEST_CANDIDATE, env.REPO_ODO_VERSION)) && (env.ISSUE_URL == '') }}
        run: |
          curl -X POST -H "${{ env.AUTHORIZATION_HEADER }}" -H "${{ env.ACCEPT_HEADER }}" "${{ env.API_REPO }}/repos/rgrunber/${{ env.REPO }}/issues" -d '{"title":"'"Update to odo ${{ env.LATEST_CANDIDATE }}"'","body":"'"See ${{ env.LATEST_CANDIDATE_URL }}"'"}'
