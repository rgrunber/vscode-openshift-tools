name: check-odo

on: [workflow_dispatch]

jobs:
  check-odo-repo:
    runs-on: ubuntu-latest
    env:
        API_REPO: https://api.github.com
        OWNER: redhat-developer
        ODO_REPO: odo
        REPO: vscode-openshift-tools
        ACCEPT_HEADER: 'Accept: application/vnd.github.v3+json'
        AUTHORIZATION_HEADER: "Authorization: token ${{ secrets.GITHUB_TOKEN }}"
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check Out Code
        uses: actions/checkout@v2
      - name: Get latest ODO version
        run: |
          echo "REPO_ODO_VERSION=$(cat src/tools.json | jq -r .odo.version)" >> $GITHUB_ENV
          LATEST_RELEASE_RESPONSE=$(curl -X GET -H "${{ env.AUTHORIZATION_HEADER }}" -H "${{ env.ACCEPT_HEADER }}" "${{ env.API_REPO }}/repos/${{ env.OWNER }}/${{ env.ODO_REPO }}/releases/latest")
          echo "LATEST_RELEASE=$(echo ${LATEST_RELEASE_RESPONSE} | jq -r .tag_name | sed 's|v||')" >> $GITHUB_ENV
          echo "LATEST_CANDIDATE_URL=$(echo ${LATEST_RELEASE_RESPONSE} | jq -r .html_url)" >> $GITHUB_ENV
      - name: Find existing issue for ODO version
        run: |
          echo ISSUE_URL=$(curl -X GET -H "${{ env.AUTHORIZATION_HEADER }}" -H "${{ env.ACCEPT_HEADER }}" "${{ env.API_REPO }}/search/issues?q=update+odo+v${{env.LATEST_RELEASE}}+in:title+is:issue+repo:rgrunber/${{ env.REPO }}" | jq -r .items[].html_url) >> $GITHUB_ENV
      - name: Update src/tools.json with latest odo version
        if: ${{ (env.LATEST_RELEASE != env.REPO_ODO_VERSION) && (env.ISSUE_URL != '') }}
        run: |
          jq --indent 4 '.odo.version = "${{ env.LATEST_RELEASE }}"' src/tools.json | jq --indent 4 '.odo.versionRange = "^${{ env.LATEST_RELEASE }}"' | jq --indent 4 '.odo.versionRangeLabel = "version >= ${{ env.LATEST_RELEASE }}"' > src/tools.json.new
          mv src/tools.json.new src/tools.json
          for platform in win32 darwin linux; do
            old_url=`jq -r .odo.platform.${platform}.url src/tools.json`
            new_url=`echo ${old_url} | sed "s|${{ env.REPO_ODO_VERSION }}|${{ env.LATEST_RELEASE }}|"`
            checksum=`curl -s ${new_url}.sha256`
            jq --indent 4 ".odo.platform.${platform}.url = \"${new_url}\"" src/tools.json | jq --indent 4 ".odo.platform.${platform}.sha256sum = \"${checksum}\"" > src/tools.json.new
            mv src/tools.json.new src/tools.json
          done
      - name: Create pull request
        run: |
          git config --global user.email "openshifttools-bot@users.noreply.github.com"
          git config --global user.name "openshifttools-bot"
          git checkout -b "odo-${{ env.LATEST_RELEASE }}"
          git add -u
          git commit -m "Update odo to ${{ env.LATEST_RELEASE }}"
          git push origin "odo-${{ env.LATEST_RELEASE }}"
          gh pr create --title "Update odo to ${{ env.LATEST_RELEASE }}" --body "See ${{ env.LATEST_CANDIDATE_URL }}"
